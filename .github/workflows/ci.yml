name: Python CI Pipeline

on:
    push:
        branches: [ master, main, dev ]

    pull_request:
        branches: [ master, main ]

jobs:
    test:
        runs-on: ubuntu-latest # Use the latest Ubuntu runner

        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4 # Checkout the repository

            -   name: Set up Python
                uses: actions/setup-python@v5 # Set up Python environment
                with:
                    python-version: "3.11"

            -   name: Hadolint Action Check Dockerfile Syntax
                uses: hadolint/hadolint-action@v3.1.0
                with:
                    dockerfile: ./Dockerfile

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip  # Upgrade pip to the latest version
                    pip install setuptools wheel
                    pip install -r requirements.txt  # Install dependencies from requirements.txt
                    pip install pylint pytest black isort

            -   name: Run Code Formatting with Black # Format the entire repo
                run: |
                    black .

            -   name: Run Code Formatting with isort
                run: |
                    isort .

            -   name: Run Linter
                run: |
                    pylint ./app ./tests

            -   name: Run Tests
                run: |
                    python -m pytest tests/ 

            -   name: Build Docker Image
                run: |
                    docker build -t common-assessment-tool .

            -   name: Run Docker container
                run: |
                        docker run -d --name common-assessment-container -p 8000:8000 common-assessment-tool
                        sleep 10  

            -   name: Test Docker container
                run: |
                    curl --fail http://localhost:8000/docs || {
                        echo "Health check failed"
                        docker logs common-assessment-tool
                        exit 1
                    }

            - name: Stop Docker container
              run: docker stop common-assessment-container

            -   name: Print Success Message
                if: success()
                run: |
                    echo "CI Pipeline completed successfully!"
                    echo "========================"
                    echo "✓ Code checked out"
                    echo "✓ Python environment set up"
                    echo "✓ Dependencies installed"
                    echo "✓ Tests executed"
                    echo "✓ Linting completed"
                    echo "✓ Formatting checked"
                    echo "========================"            

    deploy:
        needs: test # This ensures deploy only runs if tests pass
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v4

          - name: Build Docker image
            run: docker build -t common-assessment-tool .

          - name: Run Docker container
            run: |
              docker compose up -d
              sleep 10  # Wait for container to start

          - name: Test Docker container
            run: |
              http://ec2-54-165-172-227.compute-1.amazonaws.com:8000/docs