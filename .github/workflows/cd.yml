name: CD Pipeline

on:
  push:
    branches: [master, main, dev]
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m pytest tests/

  deploy:
    needs: test # This ensures deploy only runs if tests pass
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t common-assessment-tool .

      - name: Read .env file
        run: |
          export $(grep '^AWS_ACCESS_KEY_ID=' .env)
          export $(grep '^EC2_INSTANCE_UP=' .env)
          export $(grep '^EC2_INSTANCE_IP=' .env)
          export $(grep '^EC2_USER=' .env)

      - name: Deploy Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no $AWS_ACCESS_KEY_ID@$EC2_INSTANCE_IP << 'EOF'
          docker run -d -p 8000:8000 common-assessment-tool
          sleep 10  # Wait for container to start